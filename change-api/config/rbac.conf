# 请求定义，用于明确 e.Enforce(...) 函数中参数的定义
# sub, obj, act 表示经典三元组：
# subject：访问实体
# object：访问资源
# action：访问方法
[request_definition]
r = sub, obj, act

# 策略定义，每条规则通常以形如 p 的 policy type 开头
# 比如：p,joker,data,read
# 含义：一条 joker 具有 data 读权限的规则
[policy_definition]
p = sub, obj, act

# 角色定义，是 RBAC 角色继承关系的定义
# g 说明是一个 RBAC 系统
# _, _ 表示角色继承关系，即前项继承后项角色的权限
[role_definition]
g = _, _

# 策略生效范围，对请求结果进行统一的决策
# 比如 e = some(where (p.eft == allow)) 表示如果存在任意一个决策结果为 allow，则最终决策结果为 allow
# p.eft 表示策略规则的决策结果，可以为 allow 或者 deny
# 当不指定规则的决策结果时,取默认值 allow
[policy_effect]
e = some(where (p.eft == allow))

# 匹配器，定义了如何根据请求来匹配策略规则
[matchers]
m = r.sub == p.sub && (keyMatch2(r.obj, p.obj) || \
    keyMatch(r.obj, p.obj)) && (r.act == p.act || p.act == "*") || \
    (r.sub == "Administrator")
